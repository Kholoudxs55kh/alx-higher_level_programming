The ``3-say_my_name`` module
============================

Using ``say_my_name``
---------------------

>>> say_my_name = __import__('3-say_my_name').say_my_name

Regular:
    >>> say_my_name("Kholoud", "Fattem")
    My name is Kholoud Fattem

Missing Last Name para:
    >>> say_my_name("Kholoud", )
    My name is Kholoud 

Missing First Name para:
    >>> say_my_name(, "Kholoud")
    Traceback (most recent call last):
        ...
    SyntaxError: invalid syntax

Passing a non-str as First Name:
    >>> say_my_name(55, "Kholoud")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

Passing a non-str as Last Name:
    >>> say_my_name("Kholoud", 55)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

Passing both as a non-str:
    >>> say_my_name(55, 55)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

Passing No arguments:
    >>> say_my_name()
    Traceback (most recent call last):
        ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Passing Empty para:
    >>> say_my_name("", "")
    My name is  

Passing None arg:
    >>> say_my_name("Khokh", None)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string
